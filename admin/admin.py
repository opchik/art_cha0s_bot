from keyboard.keyboard import admin_but_yes_no, admin_but_next, cancel_but
from aiogram.filters.text import Text
from aiogram.filters.command import Command
from aiogram import Router
from aiogram.types import Message, ReplyKeyboardRemove
from db.db import AdminBotDB
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext 
from aiogram.types.input_file import FSInputFile
from bot import bot
from handlers.common import format_output_admin

class Choose(StatesGroup):
    yes_no = State()
    next_pic = State()
    no = State()
    sure = State()

router = Router()


@router.message(Command(commands=["begin"]))
async def chat_start(message: Message, state: FSMContext) -> None:
    await state.set_state(Choose.next_pic)
    await message.answer(
        text="–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞—Ä—Ç–∏–Ω", 
        reply_markup=admin_but_next
        )


@router.message(Choose.next_pic)
async def check_pics(message: Message, state: FSMContext) -> None:
    match message.text:
        case "–î–∞–ª—å—à–µ":
            pic = await AdminBotDB.get_pic()
            if pic:
                await state.update_data(pic_url=pic[0][0], name=pic[0][3], usr_id=pic[0][4])
                item = [pic[0][0], format_output_admin(pic[0][1:])]
                await message.answer_photo(
                    photo=FSInputFile(item[0]),
                    caption=item[1],
                    reply_markup=admin_but_yes_no
                )
                await state.set_state(Choose.yes_no)

            else: 
                await state.set_state(Choose.next_pic)
                await message.answer(
                    text="–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª", 
                    reply_markup=admin_but_next
                    )

        case _:
            await state.set_state(Choose.next_pic)
            await message.answer(
                text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–Ω–æ–ø–∫–∏!", 
                reply_markup=admin_but_next
                )


@router.message(Choose.yes_no)
async def check_pics(message: Message, state: FSMContext) -> None:
    data = await state.get_data()
    match message.text:
        case "–î–∞":
            await AdminBotDB.add_pic(data['pic_url'], data['usr_id'])
            await state.clear()
            await state.set_state(Choose.next_pic)
            await message.answer(
                text='–ö–∞—Ä—Ç–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –≥–∞–ª–µ—Ä–µ—é', 
                reply_markup=admin_but_next
                )
            await bot.send_message(
                text=f'üìù –ö–∞—Ä—Ç–∏–Ω–∞ "{data["name"]}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –≥–∞–ª–µ—Ä–µ—é üìù', 
                chat_id=data['usr_id']
                )

        case "–ù–µ—Ç":
            await AdminBotDB.del_pic(data['pic_url'])
            await state.set_state(Choose.no)
            await message.answer(
                text="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞ –∏–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                reply_markup=ReplyKeyboardRemove()
                )

        case "–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            await state.set_state(Choose.sure)
            await message.answer("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?\n–ï—Å–ª–∏ –¥–∞ - –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É", reply_markup=cancel_but)

        case _:
            await state.set_state(Choose.yes_no)
            await message.answer(
                text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–Ω–æ–ø–∫–∏!", 
                reply_markup=admin_but_yes_no
                )

@router.message(Choose.no)
async def del_pics(message: Message, state: FSMContext) -> None:
    data = await state.get_data()
    await state.clear()
    await state.set_state(Choose.next_pic)
    await message.answer(
        text="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", 
        reply_markup=admin_but_next
        )
    await bot.send_message(
        text=f'üìù –ö–∞—Ä—Ç–∏–Ω–∞ "{data["name"]}" –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.\n{message.text} üìù',
        chat_id=data['usr_id']
        )

@router.message(Choose.sure)
async def del_profile(message: Message, state: FSMContext) -> None:
    if message.text:
        if message.text=="–û—Ç–º–µ–Ω–∞":
            await state.clear()
            await state.set_state(Choose.next_pic)
            await message.answer(text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=admin_but_next)
        else:
            data = await state.get_data()
            await AdminBotDB.delete_profile(data['usr_id'])
            await state.clear()
            await state.set_state(Choose.next_pic)
            await message.answer(
                text="–ü—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª–µ–Ω.\n–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", 
                reply_markup=admin_but_next
                )
            await bot.send_message(
                text=f'üìù –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª–µ–Ω.\n{message.text} üìù',
                chat_id=data['usr_id']
                )
    else:
        await state.set_state(Choose.sure)
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?\n–ï—Å–ª–∏ –¥–∞ - –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É", reply_markup=cancel_but)


